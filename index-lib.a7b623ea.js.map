{"mappings":"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","sources":["src/js/fetchGenres.js","src/js/createMovieCard.js","src/js/fetchQueryMovies.js","src/js/refs.js","src/js/spinner.js","src/js/infinityScroll.js","src/js/fetchTrendingMovies.js","src/js/app.js","src/js/modalTeam.js","src/js/modal.js","src/js/preloader.js"],"sourcesContent":["export const fetchGenres = async () => {\n    try {\n        const response = await fetch(`\n            https://api.themoviedb.org/3/genre/movie/list?api_key=ff98b74c6ada2972698b8eff6707845a&language=en-US\n        `);\n        return await response.json();\n    } catch (error) {\n        throw Error(response.statusText);\n    }\n}\n\nexport let localGenres;\nif (!localStorage.getItem('genres')) {\n    fetchGenres().then(genres => {\n    localStorage.setItem(\"genres\", JSON.stringify(genres.genres));\n    const saveGenres = localStorage.getItem(\"genres\");\n    localGenres = JSON.parse(saveGenres);\n});\n} else {\n    return;\n}\n\n\n","import {  localGenres } from \"./fetchGenres\";\n\nexport const createMovieCard = (movies) => {\n    return movies.map( \n        ({\n            poster_path,\n            title,\n            name,\n            release_date,\n            first_air_date,\n            genre_ids,\n            id,\n            vote_average,\n            \n        }) => {\n            let moviesGenres;\n\n            let moviesGenresFindName = localGenres\n                .filter(({ id }) => genre_ids.includes(id))\n                .map(({ name }) => name)\n\n            if (moviesGenresFindName.length <= 2) {\n                moviesGenres = moviesGenresFindName.join(', ')\n            } else {\n                moviesGenres = moviesGenresFindName.slice(0, 2).join(', ') + ', Other';\n            }\n\n            return `\n                <li data-id=\"${id}\">\n                    <a class=\"card__link\" data-id=\"${id}\">\n                        <img class=\"card__img\" data-id=\"${id}\" src='https://image.tmdb.org/t/p/w500${poster_path}' alt='${title || name}' loading=\"lazy\"/>\n                        <p class=\"card__title\" data-id=\"${id}\">${title || name}</p>\n                        <div class=\"card__inform\" data-id=\"${id}\">\n                            <p class=\"card__genres\">${moviesGenres}</p>\n                            <p class=\"card__date\">${(release_date || first_air_date).slice(0, 4)}</p>\n                            <span class=\"card__vote is-hidden\">${vote_average}</span>\n                        </div>\n                    </a>\n                </li>\n            `\n            }).join('');\n}\n\n","// API Key: ff98b74c6ada2972698b8eff6707845a\n// Get trending\n\nexport const fetchQueryMovies = async (name) => {\n    try {\n        const response = await fetch(`\n        https://api.themoviedb.org/3/search/movie?api_key=ff98b74c6ada2972698b8eff6707845a&language=en-US&page=1&include_adult=false&query=${name}\n            `);\n        return await response.json();  \n    } catch (error) {\n        throw Error(response.statusText);\n    }\n}\n","export const refs = {\n    gallery: document.querySelector('.gallery'),\n    form: document.querySelector('.navigation__form'),\n    notificate: document.querySelector('.navigation__notificate')\n}","export default class Spinner {\n    constructor({hidden = false}) {\n        this.refs = this.getRefs();\n        hidden && this.hide();\n    }\n\n    getRefs() {\n        const refs = {};\n        refs.loader = document.querySelector('.loader');\n        return refs;\n    }\n\n    show() {\n        this.refs.loader.classList.remove('is-hidden');\n    }\n\n    hide() {\n        this.refs.loader.classList.add('is-hidden')\n    }\n};\n","import {createMovieCard} from './createMovieCard';\nimport { fetchQueryMovies } from './fetchQueryMovies';\nimport { fetchTrendingMovies } from './fetchTrendingMovies';\nimport {refs} from './refs';\nimport Spinner from './spinner';\n\nlet fetchOptions = {\n    currentPage: 1,\n};\n\nconst observerOptions = {\n    rootMargin: '0px',\n    threshold: 1.0\n};\n    \nconst observer = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n        if (entry.isIntersecting) {\n            onLoadMore();\n        };\n    });\n}, observerOptions);\n\nsetObserverOn();\n\nfunction setObserverOn() {\n    observer.observe(document.querySelector('.scroll-check'));\n};\n    \nfunction setObserverOff() {\n    observer.unobserve(document.querySelector('.scroll-check'));\n};\n\nconst spinner = new Spinner({\n    loader: '.loader',\n    hidden: true,\n})\n\nfunction onLoadMore() {\n    \n    fetchTrendingMovies().then(movies => {\n        try {\n            fetchOptions.currentPage += 1;\n            refs.gallery.insertAdjacentHTML('beforeend', createMovieCard(movies.results));\n            spinner.hide();\n        } catch (error) {\n            console.log(error);\n        }\n    });\n\n    fetchQueryMovies().then(movies => {\n        try {\n            fetchOptions.currentPage += 1;\n            refs.gallery.insertAdjacentHTML('beforeend', createMovieCard(movies.results));\n            spinner.hide();     \n        } catch (error) {\n            console.log(error);\n        }\n    });\n}\n    \n    \n// function drawMovies(data) {\n//     const movies = data.hits;\n//     totalMovies = data.totalHits;\n    \n//     if (!totalMovies) {\n//         Notify.failure('Sorry, there are NO MOVIES matching your search query. Please try again.');\n            \n//         refs.form.reset();\n//         return;\n//     };\n    \n//     if (fetchOptions.currentPage === 1) {\n//         Notify.success(`Wow! We found for you${totalMovies} movies.`);\n//     };\n    \n//     createMovieCard(movies.results);\n    \n//     setObserverOn();\n// };","import { fetchOptions } from './infinityScroll'\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/trending/movie/week?api_key=ff98b74c6ada2972698b8eff6707845a`\n      // `https://api.themoviedb.org/3/trending/movie/week?api_key=ff98b74c6ada2972698b8eff6707845a&page=${fetchOptions.currentPage}`\n    );\n    return response.json();\n  } catch (error) {\n    throw Error(response.statusText);\n  }\n};\n\n\n// fetchTrendingMovies().then(movies => console.log(movies.results));\n","\nimport {fetchTrendingMovies} from './fetchTrendingMovies';\nimport {fetchQueryMovies} from './fetchQueryMovies';\nimport {createMovieCard} from './createMovieCard';\nimport {refs} from './refs';\nimport Spinner from './spinner';\n\nconst spinner = new Spinner({\n    loader: '.loader',\n    hidden: true,\n})\n\nrefs.form.addEventListener('submit', (event) => {\n    event.preventDefault();\n\n    const searchMovie = event.target.elements.navigation__input.value;\n    const searchMovieTrim = searchMovie.trim();\n\n    fetchQueryMovies(searchMovieTrim)\n        .then(movies => {\n            if (searchMovieTrim === '' || movies.results.length === 0) {\n                refs.notificate.classList.remove('visually-hidden');\n                return;\n            } else {\n                refs.gallery.innerHTML = createMovieCard(movies.results);\n            }\n                spinner.show();\n            }\n        )    \n})\n\n\n\n","const modalLinkEl = document.getElementById('modalTeam');\nconst modalEl = document.querySelector('.modal-team');\nmodalLinkEl.addEventListener('click', modalOpen);\n\nfunction modalOpen(event) {\n  event.preventDefault();\n  modalEl.classList.toggle('visually-hidden');\n  modalEl.addEventListener('keydown');\n}\n\n// function modalClose() {\n//   if (modalEl.classList.contains('visually-hidden') === false) {\n//     console.log('modal');\n//   }\n//   console.log('modal is close');\n// }\n","const refs = {\n  openModalBtn: document.querySelector('.modal-open'),\n  closeModalBtn: document.querySelector('.modal-close'),\n  backdrop: document.querySelector('.js-backdrop'),\n};\n\nrefs.openModalBtn.addEventListener('click', onOpenModal);\nrefs.closeModalBtn.addEventListener('click', offCloseModal);\nrefs.backdrop.addEventListener('click', onBackdropClick);\n\nfunction onOpenModal() {\n  window.addEventListener('keydown', onEscKeyPress);\n  refs.backdrop.classList.add('show-modal');\n}\n\nfunction offCloseModal() {\n  window.removeEventListener('keydown', onEscKeyPress);\n  refs.backdrop.classList.remove('show-modal');\n}\n\nfunction onBackdropClick(e) {\n  if (e.currentTarget === e.target) {\n    offCloseModal();\n  }\n}\n\nfunction onEscKeyPress(e) {\n  const ESC_KEY_CODE = 'Escape';\n  if (e.code === ESC_KEY_CODE) {\n    offCloseModal();\n  }\n}\n","window.onload = function () {\n    document.body.classList.add('loaded_hiding');\n    window.setTimeout(function () {\n      document.body.classList.add('loaded');\n      document.body.classList.remove('loaded_hiding');\n    }, 1000);\n  }"],"names":["localGenres","localStorage","getItem","async","response","fetch","json","error","Error","statusText","fetchGenres","then","genres","setItem","JSON","stringify","saveGenres","parse","$7zQK0","parcelRequire","$9134abd8877f9bb7$export$9d27b867a89df126","movies","map","poster_path","title","name","name1","release_date","first_air_date","genre_ids","id","id1","vote_average","moviesGenres","moviesGenresFindName","filter","includes","length","join","slice","$eeb1a3c6a97310e8$export$908f733cb80721a6","$ee27a4d7c64fc8c4$export$21666b427502ea6d","gallery","document","querySelector","form","notificate","$00cfbbdd8a53f936$export$2e2bcd8739ae039","getRefs","refs","loader","show","this","classList","remove","hide","add","constructor","hidden","$2ce415f148c0c897$var$fetchOptions","currentPage","$2ce415f148c0c897$var$observer","IntersectionObserver","entries","forEach","entry","isIntersecting","$be3cba44527b5869$export$a2840eca364d9ff2","insertAdjacentHTML","results","$2ce415f148c0c897$var$spinner","console","log","rootMargin","threshold","observe","$ce77af30fc9a6e63$var$spinner","addEventListener","event","preventDefault","searchMovieTrim","target","elements","navigation__input","value","trim","innerHTML","$7ecca67214b608f8$var$modalLinkEl","getElementById","$7ecca67214b608f8$var$modalEl","toggle","$8a7e756c566dd1ea$var$refs","openModalBtn","closeModalBtn","backdrop","$8a7e756c566dd1ea$var$offCloseModal","window","removeEventListener","$8a7e756c566dd1ea$var$onEscKeyPress","e","code","currentTarget","onload","body","setTimeout"],"version":3,"file":"index-lib.a7b623ea.js.map"}