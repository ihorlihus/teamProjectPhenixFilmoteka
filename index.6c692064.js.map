{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,iBCAe,MAAMC,EAMjBC,UACI,MAAMC,EAAO,GAEb,OADAA,EAAKC,OAASC,SAASC,cAAc,WAC9BH,EAGXI,OACIC,KAAKL,KAAKC,OAAOK,UAAUC,OAAO,aAGtCC,OACIH,KAAKL,KAAKC,OAAOK,UAAUG,IAAI,aAhBnCC,aAAYC,OAACA,GAAS,IAClBN,KAAKL,KAAOK,KAAKN,UACjBY,GAAUN,KAAKG,QDEhB,IAAII,EAAe,CACtBC,YAAa,EACbC,iBAAkB,GAGf,MASDC,EAAW,IAAIC,sBAAqBC,IACxCA,EAAQC,SAAQC,IACVA,EAAMC,iBEnBqBC,OAAOC,IACxC,IACEA,EAAQlB,OACR,MAAMmB,QAAiBC,MACrB,kGAAkGZ,EAAaC,eAInH,OADAS,EAAQd,OACDe,EAASE,OAEd,MAAOC,GACP,MAAMC,MAAMJ,SAASK,cFiCzB,CAAoBC,GAASC,MAAKC,IAC9B,IACI,GAAGnB,EAAaC,cAAgBkB,EAAOC,YAInC,OAHAC,EAAAjC,KAAKkC,QAAQC,mBAAmB,aAAa,EAAAvC,EAAAwC,iBAAgBL,EAAOM,UACpEC,OAAOC,MAAM,0EACbC,IAGJ5B,EAAaC,aAAe,EAC5BoB,EAAAjC,KAAKkC,QAAQC,mBAAmB,aAAa,EAAAvC,EAAAwC,iBAAgBL,EAAOM,UAEtE,MAAOX,GACLe,QAAQC,IAAIhB,OAnCde,QAAQC,IAAI,yBATM,CACtBC,WAAY,MACZC,UAAW,IAkBN,SAASJ,IACZzB,EAAS8B,UAAU3C,SAASC,cAAc,kBAJ1CY,EAAS+B,QAAQ5C,SAASC,cAAc,kBAQ5C,MAAM0B,EAAU,IAAI/B,EAAQ,CAC1BG,OAAQ,UACRU,QAAQ,IGpCH,MAAMoC,EAAmB1B,MAAM2B,IACpC,IACE,MAAMzB,QAAiBC,MAAM,oHACgFZ,EAAaE,8CAA8CkC,KAGxK,OAFApC,EAAaE,kBAAoB,EACjC0B,UACajB,EAASE,OACtB,MAAOC,GACP,MAAMC,MAAMJ,SAASK,c,0BCbzBhC,EAAAC,EAAA,S,aAgBgB,IAAIC,EAAQ,CACxBG,OAAQ,UACRU,QAAQ,ICXZ,MAAMsC,EAAU,IAAInD,EAAQ,CAC1BG,OAAQ,UACRU,QAAQ,IAEH,IAAIuC,EAAkB,GAE7BjB,EAAAjC,KAAKmD,KAAKC,iBAAiB,UAAUC,IACnCA,EAAMC,iBAEN,IAAIC,EAAcF,EAAMG,OAAOC,SAASC,kBAAkBC,MAC1DT,EAAkBK,EAAYK,OAE9Bb,EAAiBG,GAAiBpB,MAAKC,IACb,KAApBmB,GAAoD,IAA1BnB,EAAOM,QAAQwB,QAC3C5B,EAAAjC,KAAK8D,WAAWxD,UAAUC,OAAO,iCACjCL,SAAS6D,eAAe,UAAUC,QAClCC,YAAW,KACThC,EAAAjC,KAAK8D,WAAWxD,UAAUG,IAAI,mCAC7B,MAEHwB,EAAAjC,KAAKkC,QAAQgC,WAAY,EAAAtE,EAAAwC,iBAAgBL,EAAOM,SAElDY,EAAQ7C,UAOY,IAAIY,sBAAqBC,IAC7CA,EAAQC,SAAQC,IACVA,EAAMC,iBDhBZoB,IACAO,EAAiBG,GAAiBpB,MAAKC,IAEnC,IACIE,EAAAjC,KAAKkC,QAAQC,mBAAmB,aAAa,EAAAvC,EAAAwC,iBAAgBL,EAAOM,UAEtE,MAAOX,GACLe,QAAQC,IAAIhB,aCGE,CACtBiB,WAAY,SACZC,UAAW,IAUCE,QAAQ5C,SAASC,cAAc,qB","sources":["src/js/infinityScroll.js","src/js/spinner.js","src/js/fetchTrendingMovies.js","src/js/fetchQueryMovies.js","src/js/infinityScrollQuery.js","src/js/app.js"],"sourcesContent":["import {createMovieCard} from './createMovieCard';\nimport { fetchTrendingMovies } from './fetchTrendingMovies';\nimport { refs } from './refs';\nimport Spinner from './spinner';\n\nexport let fetchOptions = {\n    currentPage: 1,\n    currentQueryPage: 1,\n};\n\nexport const resetPage = () => {\n    fetchOptions.currentPage = 1;\n}\n\nconst observerOptions = {\n  rootMargin: '0px',\n  threshold: 1.0,\n};\n\nconst observer = new IntersectionObserver(entries => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      onLoadMore();\n      console.log('is intersecting');\n    }\n  });\n}, observerOptions);\n\nsetObserverOn();\n\nexport function setObserverOn() {\n    observer.observe(document.querySelector('.scroll-check'));\n};\n    \nexport function setObserverOff() {\n    observer.unobserve(document.querySelector('.scroll-check'));\n};\n\n\nconst spinner = new Spinner({\n  loader: '.loader',\n  hidden: true,\n});\n\nfunction onLoadMore() {\n\nfetchTrendingMovies(spinner).then(movies => {\n    try {\n        if(fetchOptions.currentPage === movies.total_pages) {\n            refs.gallery.insertAdjacentHTML('beforeend', createMovieCard(movies.results));\n            window.alert('Sorry this is the last page, we do not have any movies for you :(');\n            setObserverOff();\n            return ;\n        }\n        fetchOptions.currentPage += 1;\n        refs.gallery.insertAdjacentHTML('beforeend', createMovieCard(movies.results));\n\n    } catch (error) {\n        console.log(error);\n    }\n});\n}\n\n","export default class Spinner {\n    constructor({hidden = false}) {\n        this.refs = this.getRefs();\n        hidden && this.hide();\n    }\n\n    getRefs() {\n        const refs = {};\n        refs.loader = document.querySelector('.loader');\n        return refs;\n    }\n\n    show() {\n        this.refs.loader.classList.remove('is-hidden');\n    }\n\n    hide() {\n        this.refs.loader.classList.add('is-hidden')\n    }\n};\n","import { fetchOptions } from './infinityScroll'\n\nexport const fetchTrendingMovies = async (spinner) => {\n  try {\n    spinner.show()\n    const response = await fetch(\n      `https://api.themoviedb.org/3/trending/movie/week?api_key=ff98b74c6ada2972698b8eff6707845a&page=${fetchOptions.currentPage}`\n\n    );\n  spinner.hide()\n  return response.json();\n\n  } catch (error) {\n    throw Error(response.statusText);\n  }\n};\n\n\n// fetchTrendingMovies().then(movies => console.log(movies.results));\n","// API Key: ff98b74c6ada2972698b8eff6707845a\n// Get trending\nimport { fetchOptions } from './infinityScroll';\nimport { setObserverOff } from './infinityScroll';\n\nexport const fetchQueryMovies = async name => {\n  try {\n    const response = await fetch(`\n        https://api.themoviedb.org/3/search/movie?api_key=ff98b74c6ada2972698b8eff6707845a&language=en-US&page=${fetchOptions.currentQueryPage}&include_adult=false&query=${name}`);\n    fetchOptions.currentQueryPage += 1;\n    setObserverOff();\n    return await response.json();\n  } catch (error) {\n    throw Error(response.statusText);\n  }\n};\n","import {createMovieCard} from './createMovieCard';\nimport { fetchQueryMovies } from './fetchQueryMovies';\nimport {refs} from './refs';\nimport Spinner from './spinner';\nimport { searchMovieTrim} from './app';\nimport { setObserverOff } from './infinityScroll';\n\nexport let fetchOptions = {\n    currentPage: 1,\n    currentQueryPage: 1,\n};\n\nexport const resetQueryPage = () => {\n    fetchOptions.currentQueryPage = 1;\n}\n\nconst spinner = new Spinner({\n    loader: '.loader',\n    hidden: true,\n})\n\nexport function onLoadMoreQuery() {\n    setObserverOff();\n    fetchQueryMovies(searchMovieTrim).then(movies => {\n        \n        try {\n            refs.gallery.insertAdjacentHTML('beforeend', createMovieCard(movies.results));\n                \n        } catch (error) {\n            console.log(error);\n        }\n    });\n}","import { fetchQueryMovies } from './fetchQueryMovies';\nimport { createMovieCard } from './createMovieCard';\nimport { refs } from './refs';\nimport Spinner from './spinner';\nimport { resetPage } from './infinityScroll';\nimport { onLoadMoreQuery } from './infinityScrollQuery';\n\nconst spinner = new Spinner({\n  loader: '.loader',\n  hidden: true,\n});\nexport let searchMovieTrim = '';\n\nrefs.form.addEventListener('submit', event => {\n  event.preventDefault();\n\n  let searchMovie = event.target.elements.navigation__input.value;\n  searchMovieTrim = searchMovie.trim();\n\n  fetchQueryMovies(searchMovieTrim).then(movies => {\n    if (searchMovieTrim === '' || movies.results.length === 0) {\n      refs.notificate.classList.remove('navigation__notificate-hidden');\n      document.getElementById('myForm').reset();\n      setTimeout(() => {\n        refs.notificate.classList.add('navigation__notificate-hidden');\n      }, 5000);\n    } else {\n      refs.gallery.innerHTML = createMovieCard(movies.results);\n    }\n    spinner.show();\n  });\n\n  const observerOptions = {\n    rootMargin: '-100px',\n    threshold: 1.0,\n  };\n  const observerQuery = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        onLoadMoreQuery();\n      }\n    });\n  }, observerOptions);\n\n  observerQuery.observe(document.querySelector('.scroll-check'));\n});\n"],"names":["$csVsy","parcelRequire","$00cfbbdd8a53f936$export$2e2bcd8739ae039","getRefs","refs","loader","document","querySelector","show","this","classList","remove","hide","add","constructor","hidden","$2ce415f148c0c897$export$e12dbb0aa5635c44","currentPage","currentQueryPage","$2ce415f148c0c897$var$observer","IntersectionObserver","entries","forEach","entry","isIntersecting","async","spinner","response","fetch","json","error","Error","statusText","$2ce415f148c0c897$var$spinner","then","movies","total_pages","$krGWQ","gallery","insertAdjacentHTML","createMovieCard","results","window","alert","$2ce415f148c0c897$export$83528705734bea0e","console","log","rootMargin","threshold","unobserve","observe","$eeb1a3c6a97310e8$export$908f733cb80721a6","name","$ce77af30fc9a6e63$var$spinner","$ce77af30fc9a6e63$export$b20e827591442787","form","addEventListener","event","preventDefault","searchMovie","target","elements","navigation__input","value","trim","length","notificate","getElementById","reset","setTimeout","innerHTML"],"version":3,"file":"index.6c692064.js.map"}