{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-4a99318c484b686e.js","src/index-lib.js","src/js/watchedAndQueueMovies.js","src/js/libraryMovieCard.js","src/js/renderLibrary.js","node_modules/@parcel/runtime-js/lib/runtime-7c67597a40c36e08.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"27Kop\\\":\\\"index-lib.3668bca3.js\\\",\\\"grneR\\\":\\\"img-library.e6a18f33.jpg\\\",\\\"kMVO9\\\":\\\"index-lib.12bbb82a.js\\\"}\"));","import './js/firebase';\nimport './js/fetchGenres';\nimport './js/preloader';\nimport './js/localstorage';\nimport './js/renderOpenModal';\nimport './js/modalTeamVersion';\nimport './js/watchedAndQueueMovies';\nimport './js/createMovieCard';\n\n","import { refs } from './refs.js';\nimport { createMovieCard } from './libraryMovieCard';\nimport { renderLibrary } from './renderLibrary';\nimport imgLibrary from '../images/img-library.jpg';\n\nrenderLibrary();\n\nrefs.watchedBtnLib.addEventListener('click', onWatchedBtnClick);\nrefs.queueBtnLib.addEventListener('click', onQueueBtnClick);\n\n\nexport function onWatchedBtnClick() {\n  refs.gallery.innerHTML = '';\n  let getWatched = localStorage.getItem('Watch');\n  const parsedGetWatched = JSON.parse(getWatched);\n  if (getWatched !== null && parsedGetWatched.length !== 0) {\n      refs.gallery.insertAdjacentHTML(\n        'afterbegin',\n        createMovieCard(parsedGetWatched)\n      );\n      refs.fillerContainer.innerHTML = '';\n    } else {\n      refs.fillerContainer.innerHTML = `<p class=\"fill-text\">Your list is empty. Choose a movie.</p>\n    <img class=\"img__library\"src=\"${imgLibrary}\" alt=\"popcorn\"/>`;\n    }\n  }\n\n\n\n  function onQueueBtnClick() {\n    refs.watchedBtnLib.classList.remove('button-active');\n    refs.gallery.innerHTML = '';\n    let getQueue = localStorage.getItem('Queue');\n    const parsedGetQueue = JSON.parse(getQueue);\n    if (getQueue !== null && parsedGetQueue.length !== 0) {\n      refs.gallery.insertAdjacentHTML(\n        'afterbegin',\n        createMovieCard(parsedGetQueue)\n      );\n      refs.fillerContainer.innerHTML = '';\n    } else {\n      refs.fillerContainer.innerHTML = `<p class=\"fill-text\">Your list is empty. Choose a movie.</p>\n    <img class=\"img__library\"src=\"${imgLibrary}\" alt=\"popcorn\"/>`;\n    }\n  }\n\n\n\n","import { saveGenres } from './createMovieCard';\nimport { localGenres } from './createMovieCard';\nimport listGenres from './genres.json';\n\nexport const createMovieCard = movies => {\n  return movies\n    .map(\n      ({\n        poster_path,\n        title,\n        name,\n        release_date,\n        first_air_date,\n        id,\n        vote_average,\n      }) => {\n        let moviesGenres;\n        const imgURL = poster_path\n          ? `https://image.tmdb.org/t/p/w500${poster_path}`\n          : \"https://via.placeholder.com/344x486/808080/FFFFFF?text=Sorry,no_image\";\n        \n        const date = (release_date || first_air_date)\n          ? (release_date || first_air_date)\n          : '0000-00-00';\n\n        let moviesGenresFindName = listGenres.genres.map(({ name }) => name);\n\n        if (moviesGenresFindName.length <= 2) {\n          moviesGenres = moviesGenresFindName.join(', ');\n        } else {\n          moviesGenres =\n            moviesGenresFindName.slice(0, 2).join(', ') + ', Other';\n        }\n\n        const filmGenre = moviesGenres\n          ? moviesGenres\n          : 'Other';\n        const voteAverageToString = vote_average.toString();\n        return `\n                <li class=\"card__item\" data-id=\"${id}\">\n                    <a class=\"card card__link\" data-id=\"${id}\">\n                        <img class=\"card__img\" data-id=\"${id}\" src='${imgURL}' alt='${\n          title || name\n        }' loading=\"lazy\"/>\n                        <p class=\"card__title\" data-id=\"${id}\">${\n          title || name\n        }</p>\n                        <div class=\"card__inform\" data-id=\"${id}\">\n                            <p class=\"card__genres\">${filmGenre}</p>\n                            <p class=\"card__date\">\n                              <span></span>|\n                            ${date.slice(0,4)}</p>\n                            <span class=\"card__vote visually-hidden\">${voteAverageToString.slice(\n                              0,\n                              3\n                            )}</span>\n                        </div>\n                    </a>\n                </li>\n            `;\n      }\n    )\n    .join('');\n};\n","import { refs } from './refs.js';\nimport { createMovieCard } from './libraryMovieCard';\nimport imgLibrary from '../images/img-library.jpg';\n\nexport function renderLibrary() {\n  refs.watchedBtnLib.classList.add('button-active');\n  let getWatched = localStorage.getItem('Watch');\n  const parsedGetWatched = JSON.parse(getWatched);\n   if (getWatched !== null && parsedGetWatched.length !== 0) {\n      refs.gallery.insertAdjacentHTML(\n        'afterbegin',\n        createMovieCard(parsedGetWatched)\n      );\n      refs.fillerContainer.innerHTML = '';\n    } else {\n      refs.fillerContainer.innerHTML = `<p class=\"fill-text\">Your list is empty. Choose a movie.</p>\n    <img class=\"img__library\"src=\"${imgLibrary}\" alt=\"popcorn\"/>`;\n    }\n  }\n","module.exports = require('./helpers/bundle-url').getBundleURL('27Kop') + require('./helpers/bundle-manifest').resolve(\"grneR\");"],"names":["$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$export$f7ad0328861e2f03","$0380ce8f1f064ccc$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$var$bundleURL","$7dd1ddf6834435ca$var$getBaseURL","url","replace","value","err","matches","stack","match","$7dd1ddf6834435ca$var$getBundleURL","parcelRequire","register","JSON","parse","$4Nugj","$2c2a1776ae402f22$export$9d27b867a89df126","movies","map","param1","poster_path","title","name1","name","release_date","first_air_date","vote_average","imgURL","concat","date","moviesGenresFindName","$parcel$interopDefault","$XcJ0g","genres","param","filmGenre","join","slice","voteAverageToString","toString","$3d478595a3d34349$exports","getBundleURL","resolve","refs","watchedBtnLib","classList","add","getWatched","localStorage","getItem","parsedGetWatched","gallery","insertAdjacentHTML","fillerContainer","innerHTML","addEventListener","queueBtnLib","remove","getQueue","parsedGetQueue"],"version":3,"file":"index-lib.3668bca3.js.map"}