{"mappings":"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","sources":["src/index.js","src/js/fetchTrendingMovies.js","src/js/infinityScroll.js","src/js/spinner.js","<<jsx-config-pragma.js>>","src/js/fetchQueryMovies.js","src/js/infinityScrollQuery.js","src/js/app.js","src/js/modalTeam.js","src/js/topButton.js","src/js/theme.js"],"sourcesContent":["import './js/firebase';\nimport './js/fetchTrendingMovies';\nimport './js/app';\nimport './js/modalTeam';\nimport './js/fetchGenres';\nimport './js/preloader';\nimport './js/spinner';\nimport './js/infinityScroll';\nimport './js/localstorage';\nimport './js/renderOpenModal';\nimport './js/modalTeamVersion';\nimport './js/infinityScrollQuery';\nimport './js/topButton';\nimport './js/theme';\n","import { fetchOptions } from './infinityScroll';\n\nexport const fetchTrendingMovies = async spinner => {\n  try {\n    console.log(fetchOptions.currentPage);\n    spinner.show();\n    const response = await fetch(\n      `https://api.themoviedb.org/3/trending/movie/week?api_key=ff98b74c6ada2972698b8eff6707845a&page=${fetchOptions.currentPage}`\n    );\n    spinner.hide();\n    return response.json();\n  } catch (error) {\n    throw Error(response.statusText);\n  }\n};\n\n// fetchTrendingMovies().then(movies => {\n//   refs.gallery.innerHTML = createMovieCard(movies.results);\n// });\n// fetchTrendingMovies().then(data => console.log(data));\n// ${fetchOptions.currentPage}\n","import { createMovieCard } from './createMovieCard';\nimport { fetchTrendingMovies } from './fetchTrendingMovies';\nimport { refs } from './refs';\nimport Spinner from './spinner';\n\nexport let fetchOptions = {\n  currentPage: 1,\n  currentQueryPage: 1,\n};\n\nexport const resetPage = () => {\n  fetchOptions.currentPage = 1;\n};\n\nconst observerOptions = {\n  rootMargin: '0px',\n  threshold: 1.0,\n};\n\nconst observer = new IntersectionObserver(entries => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      onLoadMore();\n      console.log('is intersecting');\n    }\n  });\n}, observerOptions);\n\nsetObserverOn();\n\nexport function setObserverOn() {\n  observer.observe(document.querySelector('.scroll-check'));\n}\n\nexport function setObserverOff() {\n  observer.unobserve(document.querySelector('.scroll-check'));\n}\n\nconst spinner = new Spinner({\n  loader: '.loader',\n  hidden: true,\n});\n\nfunction onLoadMore() {\n  fetchTrendingMovies(spinner).then(movies => {\n    try {\n      if (fetchOptions.currentPage === movies.total_pages) {\n        refs.gallery.insertAdjacentHTML('beforeend', createMovieCard(movies.results));\n        refs.gallery.insertAdjacentHTML('afterend', 'Sorry this is the last page, we do not have any movies for you :(');\n        setObserverOff();\n        return;\n      }\n      fetchOptions.currentPage += 1;\n      refs.gallery.insertAdjacentHTML('beforeend', createMovieCard(movies.results));\n    } catch (error) {\n      console.log(error);\n    }\n  });\n}\n","export default class Spinner {\n    constructor({hidden = false}) {\n        this.refs = this.getRefs();\n        hidden && this.hide();\n    }\n\n    getRefs() {\n        const refs = {};\n        refs.loader = document.querySelector('.loader');\n        return refs;\n    }\n\n    show() {\n        this.refs.loader.classList.remove('is-hidden');\n    }\n\n    hide() {\n        this.refs.loader.classList.add('is-hidden')\n    }\n};\n",null,"// API Key: ff98b74c6ada2972698b8eff6707845a\n// Get trending\nimport { fetchOptions } from './infinityScroll';\nimport { setObserverOff } from './infinityScroll';\n\nexport const fetchQueryMovies = async name => {\n  try {\n    const response = await fetch(`\n        https://api.themoviedb.org/3/search/movie?api_key=ff98b74c6ada2972698b8eff6707845a&language=en-US&page=${fetchOptions.currentQueryPage}&include_adult=false&query=${name}`);\n    fetchOptions.currentQueryPage += 1;\n    setObserverOff();\n    return await response.json();\n  } catch (error) {\n    throw Error(response.statusText);\n  }\n};\n","import { createMovieCard } from './createMovieCard';\nimport { fetchQueryMovies } from './fetchQueryMovies';\nimport { refs } from './refs';\nimport Spinner from './spinner';\nimport { searchMovieTrim } from './app';\nimport { setObserverOff } from './infinityScroll';\n\nexport let fetchOptions = {\n  currentPage: 1,\n  currentQueryPage: 1,\n};\n\nexport const resetQueryPage = () => {\n  fetchOptions.currentQueryPage = 1;\n};\n\nconst spinner = new Spinner({\n  loader: '.loader',\n  hidden: true,\n});\n\nexport function onLoadMoreQuery() {\n  setObserverOff();\n  fetchQueryMovies(searchMovieTrim).then(movies => {\n    try {\n      if(fetchOptions.currentQueryPage === movies.total_pages) {\n      refs.gallery.insertAdjacentHTML('beforeend', createMovieCard(movies.results));\n      refs.gallery.insertAdjacentHTML('afterend', 'Sorry this is the last page, we do not have any movies for you :(');\n      spinner.hide();\n      }\n      refs.gallery.insertAdjacentHTML('beforeend', createMovieCard(movies.results));\n      \n    } catch (error) {\n      console.log(error);\n    }\n  });\n}\n","import { fetchQueryMovies } from './fetchQueryMovies';\nimport { createMovieCard } from './createMovieCard';\nimport { refs } from './refs';\nimport Spinner from './spinner';\nimport { resetPage } from './infinityScroll';\nimport { onLoadMoreQuery } from './infinityScrollQuery';\n\nconst spinner = new Spinner({\n  loader: '.loader',\n  hidden: true,\n});\nexport let searchMovieTrim = '';\n\nrefs.form.addEventListener('submit', event => {\n  event.preventDefault();\n\n  let searchMovie = event.target.elements.navigation__input.value;\n  searchMovieTrim = searchMovie.trim();\n\n  fetchQueryMovies(searchMovieTrim).then(movies => {\n    if (searchMovieTrim === '' || movies.results.length === 0) {\n      refs.notificate.classList.remove('navigation__notificate-hidden');\n      document.getElementById('myForm').reset();\n      setTimeout(() => {\n        refs.notificate.classList.add('navigation__notificate-hidden');\n      }, 5000);\n    } else {\n      refs.gallery.innerHTML = createMovieCard(movies.results);\n    }\n    spinner.show();\n  });\n\n  const observerOptions = {\n    rootMargin: '-100px',\n    threshold: 1.0,\n  };\n  const observerQuery = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        onLoadMoreQuery();\n      }\n    });\n  }, observerOptions);\n\n  observerQuery.observe(document.querySelector('.scroll-check'));\n});\n","const modalLinkEl = document.getElementById('modalTeam');\nconst modalEl = document.querySelector('.modal-team');\nmodalLinkEl.addEventListener('click', modalOpen);\n\nfunction modalOpen(event) {\n  event.preventDefault();\n  modalEl.classList.toggle('visually-hidden');\n  modalEl.addEventListener('keydown');\n}\n\n// function modalClose() {\n//   if (modalEl.classList.contains('visually-hidden') === false) {\n//     console.log('modal');\n//   }\n//   console.log('modal is close');\n// }\n","const topBtn = document.querySelector(\".top_button\");\n\nwindow.onscroll = function() {scrollFunction()};\n\nfunction scrollFunction() {\n  if (document.body.scrollTop > 700 || document.documentElement.scrollTop > 700) {\n    topBtn.classList.remove('is-hidden')\n  }\n   else {\n    topBtn.classList.add('is-hidden')\n  }\n}\n\ntopBtn.addEventListener('click', topFunction);\n\nfunction topFunction() {\n  document.body.scrollTop = 0; \n  document.documentElement.scrollTop = 0; \n}","import { refs } from './refs';\nlet darkTheme = localStorage.getItem('darkTheme');\n\nconst darkThemeToggle = document.querySelector('#dark-theme');\n\nconst enableDarkTheme = () => {\n  refs.theme.classList.add('darktheme');\n  localStorage.setItem('darkTheme', 'enabled');\n};\n\nconst disableDarkTheme = () => {\n  refs.theme.classList.remove('darktheme');\n  localStorage.setItem('darkTheme', null);\n};\n\ndarkThemeToggle.addEventListener('click', () => {\n  darkTheme = localStorage.getItem('darkTheme');\n  if (darkTheme !== 'enabled') {\n    enableDarkTheme();\n  } else {\n    disableDarkTheme();\n  }\n});\n\nconst day = document.querySelector('.light');\nconst night = document.querySelector('.dark');\n\ndarkThemeToggle.addEventListener('click', () => {\n  day.classList.toggle('visible');\n  night.classList.toggle('visible');\n});\n\nif (darkTheme === 'enabled') {\n  enableDarkTheme();\n  day.classList.toggle('visible');\n  night.classList.toggle('visible');\n}"],"names":["parcelRequire","$bpxeT","$i3Qnx","$8MBJY","$dd8ebecfaae47a78$export$2e2bcd8739ae039","Spinner","param","hidden","_hidden","this","refs","getRefs","hide","key","loader","document","querySelector","classList","remove","add","$0dda5a411dab1a32$export$e12dbb0aa5635c44","currentPage","currentQueryPage","$0dda5a411dab1a32$var$observer","IntersectionObserver","entries","forEach","entry","isIntersecting","$067fe24ac3466aea$export$a2840eca364d9ff2","$0dda5a411dab1a32$var$spinner","then","movies","total_pages","$4Nugj","gallery","insertAdjacentHTML","createMovieCard","results","$0dda5a411dab1a32$export$83528705734bea0e","error","console","log","rootMargin","threshold","unobserve","observe","$parcel$interopDefault","$2TvXO","mark","_callee","spinner","response1","show","fetch","concat","_ctx","sent","json","Error","response","statusText","$6380189e66398a48$export$908f733cb80721a6","name","$a2c91b33ad5a848e$export$e12dbb0aa5635c44","$a2c91b33ad5a848e$var$spinner","$7e6258f3559d0f34$var$spinner","$7e6258f3559d0f34$export$b20e827591442787","form","addEventListener","event","preventDefault","searchMovie","target","elements","navigation__input","value","trim","length","notificate","getElementById","reset","setTimeout","innerHTML","$eed1e062f3f2d1b2$var$modalLinkEl","$eed1e062f3f2d1b2$var$modalEl","toggle","$39beaf08e73e3038$var$topBtn","window","onscroll","body","scrollTop","documentElement","$73a6fccb2ce51eb8$var$darkTheme","localStorage","getItem","$73a6fccb2ce51eb8$var$darkThemeToggle","$73a6fccb2ce51eb8$var$enableDarkTheme","theme","setItem","$73a6fccb2ce51eb8$var$day","$73a6fccb2ce51eb8$var$night"],"version":3,"file":"index.dd800e00.js.map"}