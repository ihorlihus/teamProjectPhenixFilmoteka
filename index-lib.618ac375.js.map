{"mappings":"iiBAAAA,EAAA,S,uDCAA,IAAAC,EAAAD,EAAA,SCAAA,EAAA,S,4BAIaE,EAAkB,SAAAC,GAC7B,OAAOA,EACJC,KACC,SAAAC,G,IACEC,EAAWD,EAAXC,YACAC,EAAKF,EAALE,MACAC,EAAIH,EAAJI,KACAC,EAAYL,EAAZK,aACAC,EAAcN,EAAdM,eACAC,EAAEP,EAAFO,GACAC,EAAYR,EAAZQ,aAGMC,EAASR,EACX,kCAA8CS,OAAZT,GAClC,wEAEEU,EAAON,GAAiBC,EACzBD,GAAgBC,EACjB,aAEAM,EAAuBC,EAAAC,GAAWC,OAAOhB,KAAI,SAAAiB,G,OAAOA,EAAJZ,QAS9Ca,GAPFL,EAAqBM,QAAU,EAClBN,EAAqBO,KAAK,MAGvCP,EAAqBQ,MAAM,EAAG,GAAGD,KAAK,MAAQ,YAK9C,QACEE,EAAsBb,EAAac,WACzC,MAAO,qDAE2CZ,OADRH,EAAG,gEAEKG,OADAH,EAAG,gEACSG,OAAZH,EAAG,YACnDG,OAD4DD,EAAO,WAGnBC,OAFhDR,GAASC,EACV,iFAECO,OADgDH,EAAG,MAGAG,OAFnDR,GAASC,EACV,qEAE6CO,OADOH,EAAG,4DAIlCG,OAHwBO,EAAU,wIAIOP,OADzCC,EAAKS,MAAM,EAAE,GAAG,+EAIhBV,OAHyCW,EAAoBD,MAC7D,EACA,GACA,6GAOzBD,KAAK,KC9DVvB,EAAAD,EAAA,UAGO,WACLC,EAAA2B,KAAKC,cAAcC,UAAUC,IAAI,iBACjC,IAAIC,EAAaC,aAAaC,QAAQ,SAChCC,EAAmBC,KAAKC,MAAML,GACJ,IAA5BG,EAAiBZ,QACnBtB,EAAA2B,KAAKU,QAAQC,mBACX,aACArC,EAAgBiC,IAElBlC,EAAA2B,KAAKY,gBAAgBC,UAAY,IAEjCxC,EAAA2B,KAAKY,gBAAgBC,UAAa,+DFVtC,GAEAxC,EAAA2B,KAAKC,cAAca,iBAAiB,SAI7B,WACLzC,EAAA2B,KAAKU,QAAQG,UAAY,GACzB,IAAIT,EAAaC,aAAaC,QAAQ,SAChCC,EAAmBC,KAAKC,MAAML,GAEJ,IAA5BG,EAAiBZ,QACnBtB,EAAA2B,KAAKU,QAAQC,mBACX,aACArC,EAAgBiC,IAElBlC,EAAA2B,KAAKY,gBAAgBC,UAAY,IAEjCxC,EAAA2B,KAAKY,gBAAgBC,UAAa,kEAftCxC,EAAA2B,KAAKe,YAAYD,iBAAiB,SAmB3B,WACLzC,EAAA2B,KAAKC,cAAcC,UAAUc,OAAO,iBACpC3C,EAAA2B,KAAKU,QAAQG,UAAY,GACzB,IAAII,EAAWZ,aAAaC,QAAQ,SAC9BY,EAAiBV,KAAKC,MAAMQ,GAEJ,IAA1BC,EAAevB,QACjBtB,EAAA2B,KAAKU,QAAQC,mBACX,aACArC,EAAgB4C,IAElB7C,EAAA2B,KAAKY,gBAAgBC,UAAY,IAEjCxC,EAAA2B,KAAKY,gBAAgBC,UAAa,kE","sources":["src/index-lib.js","src/js/watchedAndQueueMovies.js","src/js/libraryMovieCard.js","src/js/renderLibrary.js"],"sourcesContent":["import './js/firebase';\nimport './js/fetchGenres';\nimport './js/preloader';\nimport './js/localstorage';\nimport './js/renderOpenModal';\nimport './js/modalTeamVersion';\nimport './js/watchedAndQueueMovies';\nimport './js/createMovieCard';\n","import { refs } from './refs.js';\nimport { createMovieCard } from './libraryMovieCard';\nimport { renderLibrary } from './renderLibrary';\n\nrenderLibrary();\n\nrefs.watchedBtnLib.addEventListener('click', onWatchedBtnClick);\nrefs.queueBtnLib.addEventListener('click', onQueueBtnClick);\n//refs.gallery.addEventListener('click', onGalleryContainerClick);\n\nexport function onWatchedBtnClick() {\n  refs.gallery.innerHTML = '';\n  let getWatched = localStorage.getItem('Watch');\n  const parsedGetWatched = JSON.parse(getWatched);\n  //console.log(parsedGetWatched)\n  if (parsedGetWatched.length !== 0) {\n    refs.gallery.insertAdjacentHTML(\n      'afterbegin',\n      createMovieCard(parsedGetWatched)\n    );\n    refs.fillerContainer.innerHTML = '';\n  } else {\n    refs.fillerContainer.innerHTML = `<p class=\"fill-text\">Your list is empty. Choose a movie.</p>`;\n  }\n}\n\nexport function onQueueBtnClick() {\n  refs.watchedBtnLib.classList.remove('button-active');\n  refs.gallery.innerHTML = '';\n  let getQueue = localStorage.getItem('Queue');\n  const parsedGetQueue = JSON.parse(getQueue);\n  //console.log(parsedGetQueue)\n  if (parsedGetQueue.length !== 0) {\n    refs.gallery.insertAdjacentHTML(\n      'afterbegin',\n      createMovieCard(parsedGetQueue)\n    );\n    refs.fillerContainer.innerHTML = '';\n  } else {\n    refs.fillerContainer.innerHTML = `<p class=\"fill-text\">Your list is empty. Choose a movie.</p>`;\n  }\n}\n\n//function onGalleryContainerClick(evt) {\n//evt.preventDefault()\n//if (evt.target.nodeName !== 'IMG') {\n//return;\n//}\n//}\n","import { saveGenres } from './createMovieCard';\nimport { localGenres } from './createMovieCard';\nimport listGenres from './genres.json';\n\nexport const createMovieCard = movies => {\n  return movies\n    .map(\n      ({\n        poster_path,\n        title,\n        name,\n        release_date,\n        first_air_date,\n        id,\n        vote_average,\n      }) => {\n        let moviesGenres;\n        const imgURL = poster_path\n          ? `https://image.tmdb.org/t/p/w500${poster_path}`\n          : \"https://via.placeholder.com/344x486/808080/FFFFFF?text=Sorry,no_image\";\n        \n        const date = (release_date || first_air_date)\n          ? (release_date || first_air_date)\n          : '0000-00-00';\n\n        let moviesGenresFindName = listGenres.genres.map(({ name }) => name);\n\n        if (moviesGenresFindName.length <= 2) {\n          moviesGenres = moviesGenresFindName.join(', ');\n        } else {\n          moviesGenres =\n            moviesGenresFindName.slice(0, 2).join(', ') + ', Other';\n        }\n\n        const filmGenre = moviesGenres\n          ? moviesGenres\n          : 'Other';\n        const voteAverageToString = vote_average.toString();\n        return `\n                <li class=\"card__item\" data-id=\"${id}\">\n                    <a class=\"card card__link\" data-id=\"${id}\">\n                        <img class=\"card__img\" data-id=\"${id}\" src='${imgURL}' alt='${\n          title || name\n        }' loading=\"lazy\"/>\n                        <p class=\"card__title\" data-id=\"${id}\">${\n          title || name\n        }</p>\n                        <div class=\"card__inform\" data-id=\"${id}\">\n                            <p class=\"card__genres\">${filmGenre}</p>\n                            <p class=\"card__date\">\n                              <span></span>|\n                            ${date.slice(0,4)}</p>\n                            <span class=\"card__vote visually-hidden\">${voteAverageToString.slice(\n                              0,\n                              3\n                            )}</span>\n                        </div>\n                    </a>\n                </li>\n            `;\n      }\n    )\n    .join('');\n};\n","import { refs } from './refs.js';\nimport { createMovieCard } from './libraryMovieCard';\n\nexport function renderLibrary() {\n  refs.watchedBtnLib.classList.add('button-active');\n  let getWatched = localStorage.getItem('Watch');\n  const parsedGetWatched = JSON.parse(getWatched);\n  if (parsedGetWatched.length !== 0) {\n    refs.gallery.insertAdjacentHTML(\n      'afterbegin',\n      createMovieCard(parsedGetWatched)\n    );\n    refs.fillerContainer.innerHTML = '';\n  } else {\n    refs.fillerContainer.innerHTML = `<p class=\"fill-text\">Your list is empty. Choose a movie.</p>`;\n  }\n}\n"],"names":["parcelRequire","$4Nugj","$2c2a1776ae402f22$export$9d27b867a89df126","movies","map","param1","poster_path","title","name1","name","release_date","first_air_date","id","vote_average","imgURL","concat","date","moviesGenresFindName","$parcel$interopDefault","$XcJ0g","genres","param","filmGenre","length","join","slice","voteAverageToString","toString","refs","watchedBtnLib","classList","add","getWatched","localStorage","getItem","parsedGetWatched","JSON","parse","gallery","insertAdjacentHTML","fillerContainer","innerHTML","addEventListener","queueBtnLib","remove","getQueue","parsedGetQueue"],"version":3,"file":"index-lib.618ac375.js.map"}