{"mappings":"AAAAA,QAAQC,IAAI,YCCL,MCeMC,EAAmBC,MAAOC,IACnC,IACI,MAAMC,QAAiBC,MAAM,gJACwGF,mBAErI,aAAaC,EAASE,OACxB,MAAOC,GACL,MAAMC,MAAMJ,SAASK,cCVtB,IAAIC,EAXgBR,WACvB,IACI,MAAME,QAAiBC,MAAM,iIAG7B,aAAaD,EAASE,OACxB,MAAOC,GACL,MAAMC,MAAMJ,SAASK,cAM7BE,GAAcC,MAAKC,IACfC,aAAaC,QAAQ,SAAUC,KAAKC,UAAUJ,EAAOA,SACrD,MAAMK,EAAaJ,aAAaK,QAAQ,UACxCT,EAAcM,KAAKI,MAAMF,MCdtB,MAAMG,EAAmBC,GACrBA,EAAOC,KACV,EAACC,YACGA,EAAWC,MACXA,EACAtB,KAAAuB,EAAIC,aACJA,EAAYC,eACZA,EAAcC,UACdA,EAASC,aACTA,MAGA,IAAIC,EACJ,GAAIF,EAAUG,QAAU,EACpBD,EAAerB,EACVuB,QAAO,EAACC,GAAEA,KAASL,EAAUM,SAASD,KACtCX,KAAI,EAACpB,KAAEA,KAAWA,IAClBiC,KAAK,UACP,CAMHL,EALyBrB,EACpB2B,MAAM,EAAG,GACTJ,QAAO,EAACC,GAAEA,KAASL,EAAUM,SAASD,KACtCX,KAAI,EAACpB,KAAEA,KAAWA,IAClBiC,KAAK,MACwB,SAatC,MAAO,qHAGgDZ,WAAqBC,GAASC,mDACpED,GAASC,wEAELK,0CACCJ,GAAgBC,GAAgBS,MAAM,EAAG,6CACvCP,6GAKrBM,KAAK,ICtDPE,EAAO,CAChBC,QAASC,SAASC,cAAc,YAChCC,KAAMF,SAASC,cAAc,sBJDEvC,WAC/B,IAEI,aADuBG,MAAM,2FACZC,OACnB,MAAOC,GACL,MAAMC,MAAMJ,SAASK,cKA7B,GAAsBG,MAAKU,IACvBgB,EAAKC,QAAQI,UAAYtB,EAAgBC,EAAOsB,YAGpDN,EAAKI,KAAKG,iBAAiB,UAAWC,IAClCA,EAAMC,iBAEN,MACMC,EADcF,EAAMG,OAAOC,SAASC,kBAAkBC,MACxBC,OAEpCpD,EAAiB+C,GACZpC,MAAKU,IACFgB,EAAKC,QAAQI,UAAYtB,EAAgBC,EAAOsB,eClB5D,MAAMU,EAAO,CACXC,aAAcf,SAASC,cAAc,eACrCe,cAAehB,SAASC,cAAc,gBACtCgB,SAAUjB,SAASC,cAAc,iBAYnC,SAASiB,IACPC,OAAOC,oBAAoB,UAAWC,GACtCP,EAAKG,SAASK,UAAUC,OAAO,cASjC,SAASF,EAAcG,GACA,WACjBA,EAAEC,MACJP,IAvBJJ,EAAKC,aAAaV,iBAAiB,SAInC,WACEc,OAAOd,iBAAiB,UAAWgB,GACnCP,EAAKG,SAASK,UAAUI,IAAI,iBAL9BZ,EAAKE,cAAcX,iBAAiB,QAASa,GAC7CJ,EAAKG,SAASZ,iBAAiB,SAY/B,SAAyBmB,GACnBA,EAAEG,gBAAkBH,EAAEf,QACxBS,OCtBJ,MAAMU,EAAc5B,SAAS6B,eAAe,aACtCC,EAAU9B,SAASC,cAAc,eACvC2B,EAAYvB,iBAAiB,SAE7B,SAAmBC,GACjBA,EAAMC,iBACNuB,EAAQR,UAAUS,OAAO,mBACzBD,EAAQzB,iBAAiB","sources":["src/js/example.js","src/js/fetchTrendingMovies.js","src/js/fetchQueryMovies.js","src/js/fetchGenres.js","src/js/createMovieCard.js","src/js/refs.js","src/js/app.js","src/js/fetchModal.js","src/js/modalTeam.js"],"sourcesContent":["console.log('hi team!');\n","\nexport const fetchTrendingMovies = async () => {\n    try {\n        const response = await fetch('https://api.themoviedb.org/3/trending/all/day?api_key=ff98b74c6ada2972698b8eff6707845a');\n        return  response.json();\n    } catch (error) {\n        throw Error(response.statusText);\n    }\n}\n\n// fetchTrendingMovies().then(movies => console.log(movies.results));","// https://api.themoviedb.org/3/movie/550?api_key=ff98b74c6ada2972698b8eff6707845a\n// API Key: ff98b74c6ada2972698b8eff6707845a\n// Get trending\n// https://api.themoviedb.org/3/trending/all/day?api_key=\n// https://api.themoviedb.org/3/search/movie?api_key=ff98b74c6ada2972698b8eff6707845a&language=en-US&page=1&include_adult=false&query=dog\n// підставляємо у index.js\n// const refs = {\n//     gallery: document.querySelector('.gallery')\n// }\n\n// fetchTrendingMovies().then(movies => {\n//     refs.gallery.innerHTML = createMovieCard(movies.results);\n//     console.log(movies.results);\n// });\n\n// fetchQueryMovies().then(movies => console.log(movies.results));\nexport const fetchQueryMovies = async (name) => {\n    try {\n        const response = await fetch(`\n        https://api.themoviedb.org/3/search/movie?api_key=ff98b74c6ada2972698b8eff6707845a&language=en-US&page=1&include_adult=false&query=${name}\n            `);\n        return await response.json();\n    } catch (error) {\n        throw Error(response.statusText);\n    }\n}\n","\n\nexport const fetchGenres = async () => {\n    try {\n        const response = await fetch(`\n            https://api.themoviedb.org/3/genre/movie/list?api_key=ff98b74c6ada2972698b8eff6707845a&language=en-US\n        `);\n        return await response.json();\n    } catch (error) {\n        throw Error(response.statusText);\n    }\n}\n\nexport let localGenres;\n\nfetchGenres().then(genres => {\n    localStorage.setItem(\"genres\", JSON.stringify(genres.genres));\n    const saveGenres = localStorage.getItem(\"genres\");\n    localGenres = JSON.parse(saveGenres);\n});\n","import {  localGenres } from \"./fetchGenres\";\n\n\n\nexport const createMovieCard = (movies) => {\n    return movies.map( \n        ({\n            poster_path,\n            title,\n            name,\n            release_date,\n            first_air_date,\n            genre_ids,\n            vote_average,\n            \n        }) => {\n            let moviesGenres;\n            if (genre_ids.length <= 3) {\n                moviesGenres = localGenres\n                    .filter(({ id }) => genre_ids.includes(id))\n                    .map(({ name }) => name)\n                    .join(', ');\n            } else {\n                const moreMoviesGenres = localGenres\n                    .slice(0, 2)\n                    .filter(({ id }) => genre_ids.includes(id))\n                    .map(({ name }) => name)\n                    .join(', ');\n                moviesGenres = moreMoviesGenres + ' Other';\n            }\n                \n            \n            // let genres = localGenres.map(({ name }) => name).join(', ')\n            // if (genres) {\n            //     console.log(genres);\n            //     // localGenres\n            //     //     // .filter(({ id }) => genre_ids.includes(id))\n            //     //     .map(({ name }) => name)\n            //     //     .join(', ');\n            // }\n\n            return `\n                <li>\n                    <a>\n                        <img src='https://image.tmdb.org/t/p/w500${poster_path}' alt='${title || name}' loading=\"lazy\"/>\n                        <p>${title || name}</p>\n                        <div>\n                            <p>${moviesGenres}</p>\n                            <p>${(release_date || first_air_date).slice(0, 4)}</p>\n                            <span>${vote_average}</span>\n                        </div>\n                    </a>\n                </li>\n            `\n            }).join('');\n}\n\n","export const refs = {\n    gallery: document.querySelector('.gallery'),\n    form: document.querySelector('.navigation__form'),\n}","\nimport {fetchTrendingMovies} from './fetchTrendingMovies';\nimport {fetchQueryMovies} from './fetchQueryMovies';\nimport {createMovieCard} from './createMovieCard';\nimport {refs} from './refs';\n\nfetchTrendingMovies().then(movies => {\n    refs.gallery.innerHTML = createMovieCard(movies.results);\n});\n\nrefs.form.addEventListener('submit', (event) => {\n    event.preventDefault();\n\n    const searchMovie = event.target.elements.navigation__input.value;\n    const searchMovieTrim = searchMovie.trim();\n\n    fetchQueryMovies(searchMovieTrim)\n        .then(movies => {\n            refs.gallery.innerHTML = createMovieCard(movies.results);\n        })\n})\n","const refs = {\n  openModalBtn: document.querySelector('.modal-open'),\n  closeModalBtn: document.querySelector('.modal-close'),\n  backdrop: document.querySelector('.js-backdrop'),\n};\n\nrefs.openModalBtn.addEventListener('click', onOpenModal);\nrefs.closeModalBtn.addEventListener('click', offCloseModal);\nrefs.backdrop.addEventListener('click', onBackdropClick);\n\nfunction onOpenModal() {\n  window.addEventListener('keydown', onEscKeyPress);\n  refs.backdrop.classList.add('show-modal');\n}\n\nfunction offCloseModal() {\n  window.removeEventListener('keydown', onEscKeyPress);\n  refs.backdrop.classList.remove('show-modal');\n}\n\nfunction onBackdropClick(e) {\n  if (e.currentTarget === e.target) {\n    offCloseModal();\n  }\n}\n\nfunction onEscKeyPress(e) {\n  const ESC_KEY_CODE = 'Escape';\n  if (e.code === ESC_KEY_CODE) {\n    offCloseModal();\n  }\n}\n","const modalLinkEl = document.getElementById('modalTeam');\nconst modalEl = document.querySelector('.modal-team');\nmodalLinkEl.addEventListener('click', modalOpen);\n\nfunction modalOpen(event) {\n  event.preventDefault();\n  modalEl.classList.toggle('visually-hidden');\n  modalEl.addEventListener('keydown');\n}\n\n// function modalClose() {\n//   if (modalEl.classList.contains('visually-hidden') === false) {\n//     console.log('modal');\n//   }\n//   console.log('modal is close');\n// }\n"],"names":["console","log","$eeb1a3c6a97310e8$export$908f733cb80721a6","async","name","response","fetch","json","error","Error","statusText","$5844b68ee09a1fe1$export$51d062533fa741c4","$5844b68ee09a1fe1$export$e95d448b93b2cdb","then","genres","localStorage","setItem","JSON","stringify","saveGenres","getItem","parse","$9134abd8877f9bb7$export$9d27b867a89df126","movies","map","poster_path","title","name1","release_date","first_air_date","genre_ids","vote_average","moviesGenres","length","filter","id","includes","join","slice","$ee27a4d7c64fc8c4$export$21666b427502ea6d","gallery","document","querySelector","form","innerHTML","results","addEventListener","event","preventDefault","searchMovieTrim","target","elements","navigation__input","value","trim","$0708a20f919e948c$var$refs","openModalBtn","closeModalBtn","backdrop","$0708a20f919e948c$var$offCloseModal","window","removeEventListener","$0708a20f919e948c$var$onEscKeyPress","classList","remove","e","code","add","currentTarget","$7ecca67214b608f8$var$modalLinkEl","getElementById","$7ecca67214b608f8$var$modalEl","toggle"],"version":3,"file":"index-lib.ac81d1fe.js.map"}