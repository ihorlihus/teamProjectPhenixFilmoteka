var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},t={},n={},r=e.parcelRequired7c6;null==r&&((r=function(e){if(e in t)return t[e].exports;if(e in n){var r=n[e];delete n[e];var a={id:e,exports:{}};return t[e]=a,r.call(a.exports,a,a.exports),a.exports}var s=new Error("Cannot find module '"+e+"'");throw s.code="MODULE_NOT_FOUND",s}).register=function(e,t){n[e]=t},e.parcelRequired7c6=r);const a=localStorage.getItem("genres"),s=JSON.parse(a),o=e=>e.map((({poster_path:e,title:t,name:n,release_date:r,first_air_date:a,genre_ids:o,id:i,vote_average:d})=>{let c,l=s.filter((({id:e})=>o.includes(e))).map((({name:e})=>e));c=l.length<=2?l.join(", "):l.slice(0,2).join(", ")+", Other";const u=d.toString();return`\n                <li class="card__item" data-id="${i}">\n                    <a class="card card__link" data-id="${i}">\n                        <img class="card__img" data-id="${i}" src='https://image.tmdb.org/t/p/w500${e}' alt='${t||n}' loading="lazy"/>\n                        <p class="card__title" data-id="${i}">${t||n}</p>\n                        <div class="card__inform" data-id="${i}">\n                            <p class="card__genres">${c}</p>\n                            <p class="card__date">\n                              <span></span>| \n                            ${(r||a).slice(0,4)}</p>\n                            <span class="card__vote visually-hidden">${u.slice(0,3)}</span>\n                        </div>\n                    </a>\n                </li>\n            `})).join("");var i=r("krGWQ");class d{getRefs(){const e={};return e.loader=document.querySelector(".loader"),e}show(){this.refs.loader.classList.remove("is-hidden")}hide(){this.refs.loader.classList.add("is-hidden")}constructor({hidden:e=!1}){this.refs=this.getRefs(),e&&this.hide()}}let c={currentPage:1,currentQueryPage:1};const l=new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting&&((async e=>{try{e.show();const t=await fetch(`https://api.themoviedb.org/3/trending/movie/week?api_key=ff98b74c6ada2972698b8eff6707845a&page=${c.currentPage}`);return e.hide(),t.json()}catch(e){throw Error(response.statusText)}})(h).then((e=>{try{if(c.currentPage===e.total_pages)return i.refs.gallery.insertAdjacentHTML("beforeend",o(e.results)),window.alert("Sorry this is the last page, we do not have any movies for you :("),void u();c.currentPage+=1,i.refs.gallery.insertAdjacentHTML("beforeend",o(e.results))}catch(e){console.log(e)}})),console.log("is intersecting"))}))}),{rootMargin:"0px",threshold:1});function u(){l.unobserve(document.querySelector(".scroll-check"))}l.observe(document.querySelector(".scroll-check"));const h=new d({loader:".loader",hidden:!0});const f=async e=>{try{const t=await fetch(`\n        https://api.themoviedb.org/3/search/movie?api_key=ff98b74c6ada2972698b8eff6707845a&language=en-US&page=${c.currentQueryPage}&include_adult=false&query=${e}`);return c.currentQueryPage+=1,u(),await t.json()}catch(e){throw Error(response.statusText)}};i=r("krGWQ"),i=r("krGWQ");new d({loader:".loader",hidden:!0});const g=new d({loader:".loader",hidden:!0});let p="";i.refs.form.addEventListener("submit",(e=>{e.preventDefault();let t=e.target.elements.navigation__input.value;p=t.trim(),f(p).then((e=>{""===p||0===e.results.length?(i.refs.notificate.classList.remove("navigation__notificate-hidden"),document.getElementById("myForm").reset(),setTimeout((()=>{i.refs.notificate.classList.add("navigation__notificate-hidden")}),5e3)):i.refs.gallery.innerHTML=o(e.results),g.show()}));new IntersectionObserver((e=>{e.forEach((e=>{e.isIntersecting&&(u(),f(p).then((e=>{try{i.refs.gallery.insertAdjacentHTML("beforeend",o(e.results))}catch(e){console.log(e)}})))}))}),{rootMargin:"-100px",threshold:1}).observe(document.querySelector(".scroll-check"))}));const m=document.getElementById("modalTeam"),y=document.querySelector(".modal-team");m.addEventListener("click",(function(e){e.preventDefault(),y.classList.toggle("visually-hidden"),y.addEventListener("keydown")}));(async()=>{try{const e=await fetch("\n            https://api.themoviedb.org/3/genre/movie/list?api_key=ff98b74c6ada2972698b8eff6707845a&language=en-US\n        ");return await e.json()}catch(e){throw Error(response.statusText)}})().then((e=>{})),window.onload=function(){document.body.classList.add("loaded_hiding"),window.setTimeout((function(){document.body.classList.add("loaded"),document.body.classList.remove("loaded_hiding")}),1e3)},r("bOFJ0"),r("TEBOm");
//# sourceMappingURL=index.611d36aa.js.map
