{"mappings":"qhBAAAA,EAAA,S,4CCAA,IAAAC,EAAAD,EAAA,SCAAA,EAAA,S,4BAIO,MAAME,EAAkBC,GACtBA,EACJC,KACC,EAACC,YACCA,EAAWC,MACXA,EACAC,KAAAC,EAAIC,aACJA,EAAYC,eACZA,EAAcC,GACdA,EAAEC,aACFA,MAEA,IAAIC,EAEAC,EAAuBC,EAAAC,GAAWC,OAAOb,KAAI,EAACG,KAAEA,KAAWA,IAG7DM,EADEC,EAAqBI,QAAU,EAClBJ,EAAqBK,KAAK,MAGvCL,EAAqBM,MAAM,EAAG,GAAGD,KAAK,MAAQ,UAElD,MAAME,EAAsBT,EAAaU,WACzC,MAAO,qDACmCX,gEACQA,gEACAA,0CAA2CN,WAC3FC,GAASE,gFAEuCG,MAChDL,GAASE,qEAE0CG,4DACPE,yIAGvBJ,GAAgBC,GAAgBU,MAAM,EAAG,gEACjBC,EAAoBD,MAC7C,EACA,8GAQzBD,KAAK,ICnDVlB,EAAAD,EAAA,UAIO,WACHC,EAAAsB,KAAKC,cAAcC,UAAUC,IAAI,iBACjC,IAAIC,EAAaC,aAAaC,QAAQ,SACtC,MAAMC,EAAmBC,KAAKC,MAAML,GACJ,IAA5BG,EAAiBZ,QACjBjB,EAAAsB,KAAKU,QAAQC,mBAAmB,aAAchC,EAAgB4B,IAC9D7B,EAAAsB,KAAKY,gBAAgBC,UAAY,IAEjCnC,EAAAsB,KAAKY,gBAAgBC,UAAY,+DFRzC,GAEAnC,EAAAsB,KAAKC,cAAca,iBAAiB,SAI7B,WACHpC,EAAAsB,KAAKU,QAAQG,UAAY,GACzB,IAAIT,EAAaC,aAAaC,QAAQ,SACtC,MAAMC,EAAmBC,KAAKC,MAAML,GAEJ,IAA5BG,EAAiBZ,QACjBjB,EAAAsB,KAAKU,QAAQC,mBAAmB,aAAchC,EAAgB4B,IAC9D7B,EAAAsB,KAAKY,gBAAgBC,UAAY,IAEjCnC,EAAAsB,KAAKY,gBAAgBC,UAAY,kEAZzCnC,EAAAsB,KAAKe,YAAYD,iBAAiB,SAgB3B,WACHpC,EAAAsB,KAAKC,cAAcC,UAAUc,OAAO,iBACpCtC,EAAAsB,KAAKU,QAAQG,UAAY,GACzB,IAAII,EAAWZ,aAAaC,QAAQ,SACpC,MAAMY,EAAiBV,KAAKC,MAAMQ,GAEJ,IAA1BC,EAAevB,QACfjB,EAAAsB,KAAKU,QAAQC,mBAAmB,aAAchC,EAAgBuC,IAC9DxC,EAAAsB,KAAKY,gBAAgBC,UAAY,IAEjCnC,EAAAsB,KAAKY,gBAAgBC,UAAY,kE","sources":["src/index-lib.js","src/js/watchedAndQueueMovies.js","src/js/libraryMovieCard.js","src/js/renderLibrary.js"],"sourcesContent":["import './js/fetchGenres';\nimport './js/preloader';\nimport './js/localstorage';\nimport './js/renderOpenModal';\nimport './js/modalTeamVersion';\nimport './js/watchedAndQueueMovies';\nimport './js/createMovieCard';\n","import { refs } from './refs.js';\nimport { createMovieCard } from './libraryMovieCard';\nimport { renderLibrary } from './renderLibrary';\n\nrenderLibrary()\n\nrefs.watchedBtnLib.addEventListener('click', onWatchedBtnClick);\nrefs.queueBtnLib.addEventListener('click', onQueueBtnClick);\n//refs.gallery.addEventListener('click', onGalleryContainerClick);\n\nexport function onWatchedBtnClick() {\n    refs.gallery.innerHTML = ''\n    let getWatched = localStorage.getItem('Watch')\n    const parsedGetWatched = JSON.parse(getWatched)\n    //console.log(parsedGetWatched)\n    if (parsedGetWatched.length !== 0) {\n        refs.gallery.insertAdjacentHTML('afterbegin', createMovieCard(parsedGetWatched));\n        refs.fillerContainer.innerHTML = ''\n    } else {\n        refs.fillerContainer.innerHTML = `<p class=\"fill-text\">Your list is empty. Choose a movie.</p>`;\n    }\n}\n\nexport function onQueueBtnClick() {\n    refs.watchedBtnLib.classList.remove('button-active');\n    refs.gallery.innerHTML = ''\n    let getQueue = localStorage.getItem('Queue')\n    const parsedGetQueue = JSON.parse(getQueue)\n    //console.log(parsedGetQueue)\n    if (parsedGetQueue.length !== 0) {\n        refs.gallery.insertAdjacentHTML('afterbegin', createMovieCard(parsedGetQueue));\n        refs.fillerContainer.innerHTML = ''\n    } else {\n        refs.fillerContainer.innerHTML = `<p class=\"fill-text\">Your list is empty. Choose a movie.</p>`;\n    }\n}\n\n//function onGalleryContainerClick(evt) {\n    //evt.preventDefault()\n    //if (evt.target.nodeName !== 'IMG') {\n        //return;\n    //}\n//}","import { saveGenres } from './createMovieCard';\nimport { localGenres } from './createMovieCard';\nimport listGenres from './genres.json';\n\nexport const createMovieCard = movies => {\n  return movies\n    .map(\n      ({\n        poster_path,\n        title,\n        name,\n        release_date,\n        first_air_date,\n        id,\n        vote_average,\n      }) => {\n        let moviesGenres;\n\n        let moviesGenresFindName = listGenres.genres.map(({ name }) => name);\n\n        if (moviesGenresFindName.length <= 2) {\n          moviesGenres = moviesGenresFindName.join(', ');\n        } else {\n          moviesGenres =\n            moviesGenresFindName.slice(0, 2).join(', ') + ', Other';\n        }\n        const voteAverageToString = vote_average.toString();\n        return `\n                <li class=\"card__item\" data-id=\"${id}\">\n                    <a class=\"card card__link\" data-id=\"${id}\">\n                        <img class=\"card__img\" data-id=\"${id}\" src='https://image.tmdb.org/t/p/w500${poster_path}' alt='${\n          title || name\n        }' loading=\"lazy\"/>\n                        <p class=\"card__title\" data-id=\"${id}\">${\n          title || name\n        }</p>\n                        <div class=\"card__inform\" data-id=\"${id}\">\n                            <p class=\"card__genres\">${moviesGenres}</p>\n                            <p class=\"card__date\">\n                              <span></span>|\n                            ${(release_date || first_air_date).slice(0, 4)}</p>\n                            <span class=\"card__vote\">${voteAverageToString.slice(\n                              0,\n                              3\n                            )}</span>\n                        </div>\n                    </a>\n                </li>\n            `;\n      }\n    )\n    .join('');\n};\n","import { refs } from './refs.js';\nimport { createMovieCard } from './libraryMovieCard';\n\n\nexport function renderLibrary() {\n    refs.watchedBtnLib.classList.add('button-active');\n    let getWatched = localStorage.getItem('Watch')\n    const parsedGetWatched = JSON.parse(getWatched)\n    if (parsedGetWatched.length !== 0) {\n        refs.gallery.insertAdjacentHTML('afterbegin', createMovieCard(parsedGetWatched));\n        refs.fillerContainer.innerHTML = ''\n    } else {\n        refs.fillerContainer.innerHTML = `<p class=\"fill-text\">Your list is empty. Choose a movie.</p>`;\n    }\n}\n"],"names":["parcelRequire","$krGWQ","$b3c323d43fa21506$export$9d27b867a89df126","movies","map","poster_path","title","name","name1","release_date","first_air_date","id","vote_average","moviesGenres","moviesGenresFindName","$parcel$interopDefault","$2eUFK","genres","length","join","slice","voteAverageToString","toString","refs","watchedBtnLib","classList","add","getWatched","localStorage","getItem","parsedGetWatched","JSON","parse","gallery","insertAdjacentHTML","fillerContainer","innerHTML","addEventListener","queueBtnLib","remove","getQueue","parsedGetQueue"],"version":3,"file":"index-lib.6f48687e.js.map"}