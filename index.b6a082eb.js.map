{"mappings":"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","sources":["src/js/fetchQueryMovies.js","src/js/infinityScroll.js","src/js/fetchTrendingMovies.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","src/js/spinner.js","<<jsx-config-pragma.js>>","src/js/infinityScrollQuery.js","src/js/app.js"],"sourcesContent":["// API Key: ff98b74c6ada2972698b8eff6707845a\n// Get trending\nimport { fetchOptions } from './infinityScroll';\nimport { setObserverOff } from './infinityScroll';\n\nexport const fetchQueryMovies = async name => {\n  try {\n    const response = await fetch(`\n        https://api.themoviedb.org/3/search/movie?api_key=ff98b74c6ada2972698b8eff6707845a&language=en-US&page=${fetchOptions.currentQueryPage}&include_adult=false&query=${name}`);\n    fetchOptions.currentQueryPage += 1;\n    setObserverOff();\n    return await response.json();\n  } catch (error) {\n    throw Error(response.statusText);\n  }\n};\n","import {createMovieCard} from './createMovieCard';\nimport { fetchTrendingMovies } from './fetchTrendingMovies';\nimport { refs } from './refs';\nimport Spinner from './spinner';\n\nexport let fetchOptions = {\n    currentPage: 1,\n    currentQueryPage: 1,\n};\n\nexport const resetPage = () => {\n    fetchOptions.currentPage = 1;\n}\n\nconst observerOptions = {\n  rootMargin: '0px',\n  threshold: 1.0,\n};\n\nconst observer = new IntersectionObserver(entries => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      onLoadMore();\n      console.log('is intersecting');\n    }\n  });\n}, observerOptions);\n\nsetObserverOn();\n\nexport function setObserverOn() {\n    observer.observe(document.querySelector('.scroll-check'));\n};\n    \nexport function setObserverOff() {\n    observer.unobserve(document.querySelector('.scroll-check'));\n};\n\n\nconst spinner = new Spinner({\n  loader: '.loader',\n  hidden: true,\n});\n\nfunction onLoadMore() {\n\nfetchTrendingMovies(spinner).then(movies => {\n    try {\n        if(fetchOptions.currentPage === movies.total_pages) {\n            refs.gallery.insertAdjacentHTML('beforeend', createMovieCard(movies.results));\n            window.alert('Sorry this is the last page, we do not have any movies for you :(');\n            setObserverOff();\n            return ;\n        }\n        fetchOptions.currentPage += 1;\n        refs.gallery.insertAdjacentHTML('beforeend', createMovieCard(movies.results));\n\n    } catch (error) {\n        console.log(error);\n    }\n});\n}\n\n","import { fetchOptions } from './infinityScroll'\n\nexport const fetchTrendingMovies = async (spinner) => {\n  try {\n    spinner.show()\n    const response = await fetch(\n      `https://api.themoviedb.org/3/trending/movie/week?api_key=ff98b74c6ada2972698b8eff6707845a&page=${fetchOptions.currentPage}`\n\n    );\n  spinner.hide()\n  return response.json();\n\n  } catch (error) {\n    throw Error(response.statusText);\n  }\n};\n\n\n// fetchTrendingMovies().then(data => console.log(data));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","export default class Spinner {\n    constructor({hidden = false}) {\n        this.refs = this.getRefs();\n        hidden && this.hide();\n    }\n\n    getRefs() {\n        const refs = {};\n        refs.loader = document.querySelector('.loader');\n        return refs;\n    }\n\n    show() {\n        this.refs.loader.classList.remove('is-hidden');\n    }\n\n    hide() {\n        this.refs.loader.classList.add('is-hidden')\n    }\n};\n",null,"import {createMovieCard} from './createMovieCard';\nimport { fetchQueryMovies } from './fetchQueryMovies';\nimport {refs} from './refs';\nimport Spinner from './spinner';\nimport { searchMovieTrim} from './app';\nimport { setObserverOff } from './infinityScroll';\n\nexport let fetchOptions = {\n    currentPage: 1,\n    currentQueryPage: 1,\n};\n\nexport const resetQueryPage = () => {\n    fetchOptions.currentQueryPage = 1;\n}\n\nconst spinner = new Spinner({\n    loader: '.loader',\n    hidden: true,\n})\n\nexport function onLoadMoreQuery() {\n    setObserverOff();\n    fetchQueryMovies(searchMovieTrim).then(movies => {\n        \n        try {\n            refs.gallery.insertAdjacentHTML('beforeend', createMovieCard(movies.results));\n                \n        } catch (error) {\n            console.log(error);\n        }\n    });\n}","import { fetchQueryMovies } from './fetchQueryMovies';\nimport { createMovieCard } from './createMovieCard';\nimport { refs } from './refs';\nimport Spinner from './spinner';\nimport { resetPage } from './infinityScroll';\nimport { onLoadMoreQuery } from './infinityScrollQuery';\n\nconst spinner = new Spinner({\n  loader: '.loader',\n  hidden: true,\n});\nexport let searchMovieTrim = '';\n\nrefs.form.addEventListener('submit', event => {\n  event.preventDefault();\n\n  let searchMovie = event.target.elements.navigation__input.value;\n  searchMovieTrim = searchMovie.trim();\n\n  fetchQueryMovies(searchMovieTrim).then(movies => {\n    if (searchMovieTrim === '' || movies.results.length === 0) {\n      refs.notificate.classList.remove('navigation__notificate-hidden');\n      document.getElementById('myForm').reset();\n      setTimeout(() => {\n        refs.notificate.classList.add('navigation__notificate-hidden');\n      }, 5000);\n    } else {\n      refs.gallery.innerHTML = createMovieCard(movies.results);\n    }\n    spinner.show();\n  });\n\n  const observerOptions = {\n    rootMargin: '-100px',\n    threshold: 1.0,\n  };\n  const observerQuery = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        onLoadMoreQuery();\n      }\n    });\n  }, observerOptions);\n\n  observerQuery.observe(document.querySelector('.scroll-check'));\n});\n"],"names":["$bpxeT","parcelRequire","$i3Qnx","$067fe24ac3466aea$export$a2840eca364d9ff2","$parcel$interopDefault","$2TvXO","mark","_callee","spinner","response1","show","fetch","concat","$0dda5a411dab1a32$export$e12dbb0aa5635c44","currentPage","_ctx","sent","hide","json","Error","response","statusText","Object","defineProperty","$665014edacbfe17b$exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","$74e7f8130373505f$exports","protoProps","staticProps","prototype","$dd8ebecfaae47a78$export$2e2bcd8739ae039","Spinner","param","hidden","_hidden","this","refs","getRefs","loader","document","querySelector","classList","remove","add","currentQueryPage","$0dda5a411dab1a32$var$observer","IntersectionObserver","entries","forEach","entry","isIntersecting","$0dda5a411dab1a32$var$spinner","then","movies","total_pages","$4Nugj","gallery","insertAdjacentHTML","createMovieCard","results","window","alert","$0dda5a411dab1a32$export$83528705734bea0e","error","console","log","rootMargin","threshold","unobserve","observe","$6380189e66398a48$export$908f733cb80721a6","name","$7e6258f3559d0f34$var$spinner","$7e6258f3559d0f34$export$b20e827591442787","form","addEventListener","event","preventDefault","searchMovie","elements","navigation__input","trim","notificate","getElementById","reset","setTimeout","innerHTML"],"version":3,"file":"index.b6a082eb.js.map"}