{"mappings":"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","sources":["src/index.js","src/js/infinityScroll.js","src/js/spinner.js","src/js/fetchTrendingMovies.js","src/js/fetchQueryMovies.js","src/js/infinityScrollQuery.js","src/js/app.js","src/js/modalTeam.js","src/js/topButton.js","src/js/theme.js"],"sourcesContent":["import './js/firebase';\nimport './js/fetchTrendingMovies';\nimport './js/app';\nimport './js/modalTeam';\nimport './js/fetchGenres';\nimport './js/preloader';\nimport './js/spinner';\nimport './js/infinityScroll';\nimport './js/localstorage';\nimport './js/renderOpenModal';\nimport './js/modalTeamVersion';\nimport './js/infinityScrollQuery';\nimport './js/topButton';\nimport './js/theme';\n","import { createMovieCard } from './createMovieCard';\nimport { fetchTrendingMovies } from './fetchTrendingMovies';\nimport { refs } from './refs';\nimport Spinner from './spinner';\n\nexport let fetchOptions = {\n  currentPage: 1,\n  currentQueryPage: 1,\n};\n\nexport const resetPage = () => {\n  fetchOptions.currentPage = 1;\n};\n\nconst observerOptions = {\n  rootMargin: '0px',\n  threshold: 1.0,\n};\n\nconst observer = new IntersectionObserver(entries => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      onLoadMore();\n      console.log('is intersecting');\n    }\n  });\n}, observerOptions);\n\nsetObserverOn();\n\nexport function setObserverOn() {\n  observer.observe(document.querySelector('.scroll-check'));\n}\n\nexport function setObserverOff() {\n  observer.unobserve(document.querySelector('.scroll-check'));\n}\n\nconst spinner = new Spinner({\n  loader: '.loader',\n  hidden: true,\n});\n\nfunction onLoadMore() {\n  fetchTrendingMovies(spinner).then(movies => {\n    try {\n      if (fetchOptions.currentPage === movies.total_pages) {\n        refs.gallery.insertAdjacentHTML('beforeend', createMovieCard(movies.results));\n        refs.gallery.insertAdjacentHTML('afterend', 'Sorry this is the last page, we do not have any movies for you :(');\n        setObserverOff();\n        return;\n      }\n      fetchOptions.currentPage += 1;\n      refs.gallery.insertAdjacentHTML('beforeend', createMovieCard(movies.results));\n    } catch (error) {\n      console.log(error);\n    }\n  });\n}\n","export default class Spinner {\n    constructor({hidden = false}) {\n        this.refs = this.getRefs();\n        hidden && this.hide();\n    }\n\n    getRefs() {\n        const refs = {};\n        refs.loader = document.querySelector('.loader');\n        return refs;\n    }\n\n    show() {\n        this.refs.loader.classList.remove('is-hidden');\n    }\n\n    hide() {\n        this.refs.loader.classList.add('is-hidden')\n    }\n};\n","import { fetchOptions } from './infinityScroll';\n\nexport const fetchTrendingMovies = async spinner => {\n  try {\n    console.log(fetchOptions.currentPage);\n    spinner.show();\n    const response = await fetch(\n      `https://api.themoviedb.org/3/trending/movie/week?api_key=ff98b74c6ada2972698b8eff6707845a&page=${fetchOptions.currentPage}`\n    );\n    spinner.hide();\n    return response.json();\n  } catch (error) {\n    throw Error(response.statusText);\n  }\n};\n\n// fetchTrendingMovies().then(movies => {\n//   refs.gallery.innerHTML = createMovieCard(movies.results);\n// });\n// fetchTrendingMovies().then(data => console.log(data));\n// ${fetchOptions.currentPage}\n","// API Key: ff98b74c6ada2972698b8eff6707845a\n// Get trending\nimport { fetchOptions } from './infinityScroll';\nimport { setObserverOff } from './infinityScroll';\n\nexport const fetchQueryMovies = async name => {\n  try {\n    const response = await fetch(`\n        https://api.themoviedb.org/3/search/movie?api_key=ff98b74c6ada2972698b8eff6707845a&language=en-US&page=${fetchOptions.currentQueryPage}&include_adult=false&query=${name}`);\n    fetchOptions.currentQueryPage += 1;\n    setObserverOff();\n    return await response.json();\n  } catch (error) {\n    throw Error(response.statusText);\n  }\n};\n","import { createMovieCard } from './createMovieCard';\nimport { fetchQueryMovies } from './fetchQueryMovies';\nimport { refs } from './refs';\nimport Spinner from './spinner';\nimport { searchMovieTrim } from './app';\nimport { setObserverOff } from './infinityScroll';\n\nexport let fetchOptions = {\n  currentPage: 1,\n  currentQueryPage: 1,\n};\n\nexport const resetQueryPage = () => {\n  fetchOptions.currentQueryPage = 1;\n};\n\nconst spinner = new Spinner({\n  loader: '.loader',\n  hidden: true,\n});\n\nexport function onLoadMoreQuery() {\n  setObserverOff();\n  fetchQueryMovies(searchMovieTrim).then(movies => {\n    try {\n      if(fetchOptions.currentQueryPage === movies.total_pages) {\n      refs.gallery.insertAdjacentHTML('beforeend', createMovieCard(movies.results));\n      refs.gallery.insertAdjacentHTML('afterend', 'Sorry this is the last page, we do not have any movies for you :(');\n      spinner.hide();\n      }\n      refs.gallery.insertAdjacentHTML('beforeend', createMovieCard(movies.results));\n      \n    } catch (error) {\n      console.log(error);\n    }\n  });\n}\n","import { fetchQueryMovies } from './fetchQueryMovies';\nimport { createMovieCard } from './createMovieCard';\nimport { refs } from './refs';\nimport Spinner from './spinner';\nimport { resetPage } from './infinityScroll';\nimport { onLoadMoreQuery } from './infinityScrollQuery';\n\nconst spinner = new Spinner({\n  loader: '.loader',\n  hidden: true,\n});\nexport let searchMovieTrim = '';\n\nrefs.form.addEventListener('submit', event => {\n  event.preventDefault();\n\n  let searchMovie = event.target.elements.navigation__input.value;\n  searchMovieTrim = searchMovie.trim();\n\n  fetchQueryMovies(searchMovieTrim).then(movies => {\n    if (searchMovieTrim === '' || movies.results.length === 0) {\n      refs.notificate.classList.remove('navigation__notificate-hidden');\n      document.getElementById('myForm').reset();\n      setTimeout(() => {\n        refs.notificate.classList.add('navigation__notificate-hidden');\n      }, 5000);\n    } else {\n      refs.gallery.innerHTML = createMovieCard(movies.results);\n    }\n    spinner.show();\n  });\n\n  const observerOptions = {\n    rootMargin: '-100px',\n    threshold: 1.0,\n  };\n  const observerQuery = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        onLoadMoreQuery();\n      }\n    });\n  }, observerOptions);\n\n  observerQuery.observe(document.querySelector('.scroll-check'));\n});\n","const modalLinkEl = document.getElementById('modalTeam');\nconst modalEl = document.querySelector('.modal-team');\nmodalLinkEl.addEventListener('click', modalOpen);\n\nfunction modalOpen(event) {\n  event.preventDefault();\n  modalEl.classList.toggle('visually-hidden');\n  modalEl.addEventListener('keydown');\n}\n\n// function modalClose() {\n//   if (modalEl.classList.contains('visually-hidden') === false) {\n//     console.log('modal');\n//   }\n//   console.log('modal is close');\n// }\n","const topBtn = document.querySelector(\".top_button\");\n\nwindow.onscroll = function() {scrollFunction()};\n\nfunction scrollFunction() {\n  if (document.body.scrollTop > 700 || document.documentElement.scrollTop > 700) {\n    topBtn.classList.remove('is-hidden')\n  }\n   else {\n    topBtn.classList.add('is-hidden')\n  }\n}\n\ntopBtn.addEventListener('click', topFunction);\n\nfunction topFunction() {\n  document.body.scrollTop = 0; \n  document.documentElement.scrollTop = 0; \n}","import { refs } from './refs';\nlet darkTheme = localStorage.getItem('darkTheme');\n\nconst darkThemeToggle = document.querySelector('#dark-theme');\n\nconst enableDarkTheme = () => {\n  refs.theme.classList.add('darktheme');\n  localStorage.setItem('darkTheme', 'enabled');\n};\n\nconst disableDarkTheme = () => {\n  refs.theme.classList.remove('darktheme');\n  localStorage.setItem('darkTheme', null);\n};\n\ndarkThemeToggle.addEventListener('click', () => {\n  darkTheme = localStorage.getItem('darkTheme');\n  if (darkTheme !== 'enabled') {\n    enableDarkTheme();\n  } else {\n    disableDarkTheme();\n  }\n});\n\nconst day = document.querySelector('.light');\nconst night = document.querySelector('.dark');\n\ndarkThemeToggle.addEventListener('click', () => {\n  day.classList.toggle('visible');\n  night.classList.toggle('visible');\n});\n\nif (darkTheme === 'enabled') {\n  enableDarkTheme();\n  day.classList.toggle('visible');\n  night.classList.toggle('visible');\n}"],"names":["parcelRequire","$csVsy","$00cfbbdd8a53f936$export$2e2bcd8739ae039","getRefs","refs","loader","document","querySelector","show","this","classList","remove","hide","add","constructor","hidden","$2ce415f148c0c897$export$e12dbb0aa5635c44","currentPage","currentQueryPage","$2ce415f148c0c897$var$observer","IntersectionObserver","entries","forEach","entry","isIntersecting","$be3cba44527b5869$export$a2840eca364d9ff2","$2ce415f148c0c897$var$spinner","then","movies","total_pages","$krGWQ","gallery","insertAdjacentHTML","createMovieCard","results","$2ce415f148c0c897$export$83528705734bea0e","error","console","log","rootMargin","threshold","unobserve","observe","async","spinner","response","fetch","json","Error","statusText","$eeb1a3c6a97310e8$export$908f733cb80721a6","name","$25cdd7691be0b7bc$export$e12dbb0aa5635c44","$25cdd7691be0b7bc$var$spinner","$ce77af30fc9a6e63$var$spinner","$ce77af30fc9a6e63$export$b20e827591442787","form","addEventListener","event","preventDefault","searchMovie","target","elements","navigation__input","value","trim","length","notificate","getElementById","reset","setTimeout","innerHTML","$7ecca67214b608f8$var$modalLinkEl","$7ecca67214b608f8$var$modalEl","toggle","$aad04f7d0f9751da$var$topBtn","window","onscroll","body","scrollTop","documentElement","$38bc8b2c82e947f6$var$darkTheme","localStorage","getItem","$38bc8b2c82e947f6$var$darkThemeToggle","$38bc8b2c82e947f6$var$enableDarkTheme","theme","setItem","$38bc8b2c82e947f6$var$day","$38bc8b2c82e947f6$var$night"],"version":3,"file":"index.df3e3571.js.map"}