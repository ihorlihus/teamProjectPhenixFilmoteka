{"mappings":"AAAO,MAAMA,EAAO,CAClBC,QAASC,SAASC,cAAc,YAChCC,KAAMF,SAASC,cAAc,qBAC7BE,WAAYH,SAASC,cAAc,2BACnCG,SAAUJ,SAASC,cAAc,gBACjCI,YAAaL,SAASC,cAAc,0BACpCK,YAAaN,SAASC,cAAc,wBACpCM,MAAOP,SAASC,cAAc,mBAC9BO,cAAeR,SAASC,cAAc,gBACtCQ,iBAAkBT,SAASC,cAAc,kBACzCS,YAAaV,SAASC,cAAc,iBACpCU,cAAeX,SAASC,cAAc,mBACtCW,WAAYZ,SAASC,cAAc,iBCD9B,IAAIY,EAXgBC,WACvB,IACI,MAAMC,QAAiBC,MAAM,iIAG7B,aAAaD,EAASE,OACxB,MAAOC,GACL,MAAMC,MAAMJ,SAASK,cAQ7BC,GAAcC,MAAKC,IACfC,aAAaC,QAAQ,SAAUC,KAAKC,UAAUJ,EAAOA,SACrD,MAAMK,EAAaJ,aAAaK,QAAQ,UACxChB,EAAca,KAAKI,MAAMF,MChBtB,MAAMG,EAAkBC,GACtBA,EACJC,KACC,EAACC,YACCA,EAAWC,MACXA,EACAC,KAAAC,EAAIC,aACJA,EAAYC,eACZA,EAAcC,GACdA,EAAEC,aACFA,MAEA,IAAIC,EAEAC,EAAuB9B,EACxBoB,KAAI,EAACG,KAAEA,KAAWA,IAGnBM,EADEC,EAAqBC,QAAU,EAClBD,EAAqBE,KAAK,MAGvCF,EAAqBG,MAAM,EAAG,GAAGD,KAAK,MAAQ,UAElD,MAAME,EAAsBN,EAAaO,WACzC,MAAO,qDACmCR,gEACQA,gEACAA,0CAA2CN,WAC3FC,GAASE,gFAEuCG,MAChDL,GAASE,qEAE0CG,4DACPE,wIAIxBJ,GAAgBC,GAChBO,MAAM,EAAG,gFACgCC,EAAoBD,MAAM,EAAE,8GAO9FD,KAAK,IC9CV/C,EAAKa,cAAcsC,iBAAiB,SAG7B,WACHnD,EAAKc,WAAWsC,UAAY,GAC5B,IAAIC,EAAa3B,aAAaK,QAAQ,SACtC,MAAMuB,EAAmB1B,KAAKI,MAAMqB,GAEJ,IAA5BC,EAAiBR,QACjB9C,EAAKc,WAAWyC,mBAAmB,aAActB,EAAgBqB,OARzEtD,EAAKY,YAAYuC,iBAAiB,SAY3B,WACHnD,EAAKc,WAAWsC,UAAY,GAC5B,IAAII,EAAW9B,aAAaK,QAAQ,SACpC,MAAM0B,EAAiB7B,KAAKI,MAAMwB,GAEJ,IAA1BC,EAAeX,QACf9C,EAAKc,WAAWyC,mBAAmB,aAActB,EAAgBwB","sources":["src/js/refs.js","src/js/fetchGenres.js","src/js/libraryMovieCard.js","src/js/watchedAndQueueMovies.js"],"sourcesContent":["export const refs = {\n  gallery: document.querySelector('.gallery'),\n  form: document.querySelector('.navigation__form'),\n  notificate: document.querySelector('.navigation__notificate'),\n  backdrop: document.querySelector('.js-backdrop'),\n  watchButton: document.querySelector('.button-watched__modal'),\n  queueButton: document.querySelector('.button-queue__modal'),\n  modal: document.querySelector('.modal__content'),\n  closeModalBtn: document.querySelector('.modal-close'),\n  buttonsContainer: document.querySelector('.buttons-modal'),\n  queueBtnLib: document.querySelector('.button-queue'),\n  watchedBtnLib: document.querySelector('.button-watched'),\n  galleryLib: document.querySelector('.gallery-lib'),\n};\n","export const fetchGenres = async () => {\n    try {\n        const response = await fetch(`\n            https://api.themoviedb.org/3/genre/movie/list?api_key=ff98b74c6ada2972698b8eff6707845a&language=en-US\n        `);\n        return await response.json();\n    } catch (error) {\n        throw Error(response.statusText);\n    }\n}\n\nexport let localGenres;\n\n\n\nfetchGenres().then(genres => {\n    localStorage.setItem(\"genres\", JSON.stringify(genres.genres));\n    const saveGenres = localStorage.getItem(\"genres\");\n    localGenres = JSON.parse(saveGenres);\n});\n\n// if (localStorage.getItem(\"genres\")) {\n//     return;\n// } else {\n//     fetchGenres().then(genres => {\n//         localStorage.setItem(\"genres\", JSON.stringify(genres.genres));\n//         const saveGenres = localStorage.getItem(\"genres\");\n//         localGenres = JSON.parse(saveGenres);\n//     });\n    \n// }","import { localGenres } from './fetchGenres';\n\nexport const createMovieCard = movies => {\n  return movies\n    .map(\n      ({\n        poster_path,\n        title,\n        name,\n        release_date,\n        first_air_date,\n        id,\n        vote_average,\n      }) => {\n        let moviesGenres;\n\n        let moviesGenresFindName = localGenres\n          .map(({ name }) => name);\n\n        if (moviesGenresFindName.length <= 2) {\n          moviesGenres = moviesGenresFindName.join(', ');\n        } else {\n          moviesGenres =\n            moviesGenresFindName.slice(0, 2).join(', ') + ', Other';\n        }\n        const voteAverageToString = vote_average.toString();\n        return `\n                <li class=\"card__item\" data-id=\"${id}\">\n                    <a class=\"card card__link\" data-id=\"${id}\">\n                        <img class=\"card__img\" data-id=\"${id}\" src='https://image.tmdb.org/t/p/w500${poster_path}' alt='${\n          title || name\n        }' loading=\"lazy\"/>\n                        <p class=\"card__title\" data-id=\"${id}\">${\n          title || name\n        }</p>\n                        <div class=\"card__inform\" data-id=\"${id}\">\n                            <p class=\"card__genres\">${moviesGenres}</p>\n                            <p class=\"card__date\">\n                              <span></span>\n                            ${(\n                              release_date || first_air_date\n                            ).slice(0, 4)}</p>\n                            <span class=\"card__vote visually-hidden\">${voteAverageToString.slice(0,3)}</span>\n                        </div>\n                    </a>\n                </li>\n            `;\n      }\n    )\n    .join('');\n};","import { refs } from './refs.js';\nimport { createMovieCard } from './libraryMovieCard';\n\nrefs.watchedBtnLib.addEventListener('click', onWatchedBtnClick);\nrefs.queueBtnLib.addEventListener('click', onQueueBtnClick);\n\nexport function onWatchedBtnClick() {\n    refs.galleryLib.innerHTML = ''\n    let getWatched = localStorage.getItem('Watch')\n    const parsedGetWatched = JSON.parse(getWatched)\n    //console.log(parsedGetWatched)\n    if (parsedGetWatched.length !== 0) {\n        refs.galleryLib.insertAdjacentHTML('afterbegin', createMovieCard(parsedGetWatched));\n    }\n}\n\nexport function onQueueBtnClick() {\n    refs.galleryLib.innerHTML = ''\n    let getQueue = localStorage.getItem('Queue')\n    const parsedGetQueue = JSON.parse(getQueue)\n    //console.log(parsedGetQueue)\n    if (parsedGetQueue.length !== 0) {\n        refs.galleryLib.insertAdjacentHTML('afterbegin', createMovieCard(parsedGetQueue));\n    }\n}"],"names":["$ee27a4d7c64fc8c4$export$21666b427502ea6d","gallery","document","querySelector","form","notificate","backdrop","watchButton","queueButton","modal","closeModalBtn","buttonsContainer","queueBtnLib","watchedBtnLib","galleryLib","$5844b68ee09a1fe1$export$51d062533fa741c4","async","response","fetch","json","error","Error","statusText","$5844b68ee09a1fe1$export$e95d448b93b2cdb","then","genres","localStorage","setItem","JSON","stringify","saveGenres","getItem","parse","$b3c323d43fa21506$export$9d27b867a89df126","movies","map","poster_path","title","name","name1","release_date","first_air_date","id","vote_average","moviesGenres","moviesGenresFindName","length","join","slice","voteAverageToString","toString","addEventListener","innerHTML","getWatched","parsedGetWatched","insertAdjacentHTML","getQueue","parsedGetQueue"],"version":3,"file":"index-lib.a1a28a4c.js.map"}